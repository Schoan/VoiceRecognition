<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACw
        GAAAAk1TRnQBSQFMAgEBAwEAAVgBAAFYAQABHwEAAR4BAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAF8
        AwABHgMAAQEBAAEgBQABIAE6wQABAQMEAQUDCQEMAwoBDgMAAQH/ANUAAwMBBAMiATEDOAFeA0cBggNQ
        AZoDTgGVAxQBGwgAAwYBCAMUARsDBQEH/wDBAAMRARcDWAHLA1gB5gNVAecDVQHoA1UB5AM2AVgDAAQB
        AQIDNQFXA1YBvANAAXADGAEhAwABAXsAAQEDEwEaAz0BaQNDAXcDHQEqlAADBwEJA1UBsQM4AfQDAAH/
        AwAB/wMAAf8DWgHTAyUBNwMAAQEDPwFtA1gB4wMLAf0DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AxcB+wNaAdsDLQFGJAADAQECAwUBBwgAAxUBHQNZAdcDWgHVA0QBfANFAX8DVQHo
        A1YBuQMzAVMDNQFVA1kBzwNVAegDWAHiA1YBvAM4AV4DCgEOcAADAQECAyMBMwNUAcIDAAH/AwAB/gNN
        Ad0DHwEskAADRgGBAxcB+wNQAZ4DSQGJA0kBiQNJAYkDUQHpA1oB2wMRARcDQwHxA1sB2gNJAYkDSQGJ
        A0kBiQNJAYkDSQGJA0kBiQNJAYkDSQGJA0kBiQNJAYkDSQGJA0wBkQNBAfADWwHIIAADAwEEAy8BSgNI
        AYUDJwE7AxEBFwMwAUsDWgHcA1UBsQMCAQMDCQEMA1oB2wNVAegDWwHgA10B2gNSAekDUwGsA1gBwANU
        AecDWAHdAywBQ2wAAwEBAgMlATcDVQHFA0cB4wNAAXADMAFLAzEB7wNDAXiQAANcAc4DUQHpEAADUwGq
        A1QB5AMoATwDAAH/A0wBkzAAA1YBwQMaAfscAAMBAQIDKgFBA1gB0QNYAeYDWAHdA1MBqgNaAd4DVQHn
        A1UBtwMDAQQEAANCAXUDXAHOA0YB7wNEAfIDUgGoBAADBQEHA1UBsQNYAeMDJwE6aAADAQECAygBPQNX
        AcgDSQHeAzsBYwMSARkDTQGVAz4B6wM3AVqQAANcAc4DUQHpEAADUwGqA1QB5AMoATwDAAH/A0wBkzAA
        A1YBwQMaAfscAAMjATMDWQHMA1IB6QNZAckDVAHrA1UB6ANUAesDTQGWAyIBMgMAAQEMAAMFAQcDGgEl
        Aw0BEgMAAQEDJAE2A1gB3QNaAdgDEgEYZAADAQECAysBQgNWAcoDTwHaAzkBXwMVAR0DTgGYAysB8gNQ
        AZoDBAEFkAADWQHJA1EB6RAAA1MBqgNUAeQDKAE8AwAB/wNMAZMwAANWAcEDMgH3GAADAgEDA04BmANY
        AeYDVAGrAwQBBgMrAUMDVAGvAywBRAMAAQEjAAEBAzgBXQNYAeYDWgHbAzYBWAMmATgDMQFPAx8BLTgA
        AwQBBgMJAQwDBgEIAwEBAgwAAwIBAwMvAUkDVQHMA1IB1gM3AVsDGAEhA08BnAMvAfADTQGWAwQBBpQA
        A0wBkgMBAf4DRAF6AzIBUAMyAVADMgFQA1EB6QNUAeQDDgETAy8B9gNGAe8DNQFWAzIBUAMyAVADMgFQ
        AzIBUAMyAVADMgFQAzIBUAMyAVADMgFQAzIBUAM4AV4DOAH0A1oB0xwAA1QBqwNYAeYDUgGoAxQBHBcA
        AQEDCAELAxEBFwMNARIDAwEEEAADRQF/A1IB6QNaAd4DWwHgA1gB5gNQAaQDBgEIJAADAQECAyYBOQNK
        AY0DVAHRAykB8wMGAf0DGAH5A0kB3gNQAaQDMgFQAw4BEwMxAU4DVgHPA1IB0gM1AVcDGgElA1EBoAM0
        Ae4DSwGQAwQBBZgAAw0BEgNWAb4DAAH/AwAB/wMAAf8DAAH/A1IB6AMqAUAEAAM5AWADJgH4AwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AzEB9QMxAU4cAAMXASADXAHa
        A1UB5ANMAZEDAwEECwABAQMbASYDQwF3A1QBrgNXAcIDVgG8A04BlQMuAUgDCAELCAADBwEKA1IBqANJ
        Ae8DUQHpA1QB5wNaAd4DJwE7AwABARwAAx0BKgNTAawDKwHyAx0B9wNXAcgDUAGaA0gBhwNMAZEDVQG6
        Az0B6gMGAfwDRQHmA0QB5ANVAc4DMwFSAx0BKQNQAaQDPgHrA0oBiwMEAQWgAAMFAQcDFwEgAxcBIAMX
        ASADFwEgAwsBDwsAAQEDEgEZAxcBIAMXASADFwEgAxcBIAMXASADFwEgAxcBIAMXASADFwEgAxcBIAMX
        ASADFwEgAw0BERwAAwEBAgMJAQwDTgGWA1UB5wNIAYgDAAEBBwABAQMkATUDVQGyA1UB5wNUAesBWAFW
        AVgB5gNQAeoDUQHqA1oB2ANAAW4DBwEKCAADCgENAyQBNgMEAQYDQwF3A1UB5wNMAZMDAwEEGAADMAFL
        A00B2QMxAe8DSwGOAxwBJwMCAQMQAAMSARgDPwFuA1EB1QNWAcoDMQFOAx8BLQNSAakDQAHoA0gBhQME
        AQWkAANCAXQDRgHvA0YB7wNGAe8DRgHvA1UBtAgAAxwBJwNZAdkDRgHvA0YB7wNGAe8DRgHvA0YB7wNG
        Ae8DRgHvA0YB7wNGAe8DRgHvA0YB7wNGAe8DWgHKAw8BFBQAAxYBHwM3AVsDRgF/AVsBWgFbAeEDWAHm
        AxEBFwgAAw0BEQNVAbcDVQHoA1cB5QMrAUIDAAEBAw0BEgNPAZsDUQHsA1sB4QMxAU4DAAEBCwABAQMS
        ARkDPQFoA1gB4wNYAcsDDAEQFAADKwFCA0oB3wNSAdYDLAFEAwcBCQMmATkDSwGPA1QBzQNEAeQDUAHX
        A08BpQMxAU8DCwEPAxIBGQMXASADIgEyA1MBrANFAeYDRQF/AwQBBaQAAzwBaAMYAfsDWgHNA1UBtANV
        AbQDVQG0Ax4B+gNYAcADCAELA1oB2wMoAfgDVgG4A1UBtANVAbQDVQG0A1UBtANVAbQDVQG0A1UBtANV
        AbQDVQG0A1UBtANWAbwDDAH8A1UBtBAAAwEBAgNHAYADWAHdA1gB5gNUAesDVAGvAwABAQcAAQEDMAFL
        A1oB4QNXAb0DDQERDAADAwEEAzsBYwNYAeYDVgGzAwcBCggAAxsBJgNVAbUDVwHfA1EB7ANVAbEDCQEM
        EAADEAEVA1MB0ANNAdwDJgE5AxABFQNMAZEDOQHsAyYB9ANWAcoDUwGuA1YBvwNAAekDGAH5A1MBrQMk
        ATUDEQEXA0gBhAM0Ae4DSwGQAwQBBagAA1UBugNPAewDAwEEDAADVAGvA1QB5AMoATwDAAH/A04BmC8A
        AQEDWQHHA0gB7hAAAwIBAwNRAacDVQHnA1IBqANCAXQDIQExCAADAQECA04BlANVAecDOgFhFAADBAEF
        A1cBwgNaAdMDFAEbCAADHwEsA1UB5wNYAeMDPQFqAwEBAhQAA0gBhAMxAe8DNQFXAw8BFANQAaQDMQHv
        A1ABnwMfAS0DAgEDCAADEwEaA0UBfwNHAeMDVQG3AyYBOAMtAUUDVAHLA1QBsgMQARWoAANcAc4DUQHp
        EAADUwGqA1QB5AMoATwDAAH/A0wBkzAAA1YBwQMaAfsQAAMCAQMDUwGwA1UB5wMkATYDAAEBDAADAgED
        A1YBswNVAecDJgE5FAADAQECA1MBrANaAdsDFwEgCAADFgEeAVgBVwFYAeUDWAHRAwcBCRQAAwcBCgNQ
        AdsDVQG6AxUBHQNBAXIDRQHlA0gBhAMTARoUAAMEAQYDPAFnA00B3QNQAZoDGQEjA0MBeANSAdYDNwFb
        qAADXAHOA1EB6RAAA1MBqgNUAeQDKAE8AwAB/wNMAZMwAANWAcEDGgH7EwABAQNSAaYDWAHmA1QBqwNI
        AYUDLQFGAwABAQgAA0wBkQNVAecDPgFqAwABARAAAw8BFANXAcUDWgHTAxABFggAAx8BLANVAecDWwHg
        A0UBfAMbASYDAQECDAADKwFDAzgB7QM+AWwDEwEaA1cByANVAcADIAEuHAADEQEXA0oBjANVAcwDMwFS
        Ay8BSgNTAdADSwGQqAADUQGhAzsB8wMqAUADIQEwAyEBMAMhATADWQHJA1gB4wMhATEDDQH8A1YBuQMi
        ATIDIQEwAyEBMAMhATADIQEwAyEBMAMhATADIQEwAyEBMAMhATADIQEwAyQBNQNbAdoDWAHdEwABAQNE
        AXoDUgHpA1QB6wNVAecDVAGvAwcBCQgAAyYBOQNVAeQDWAHAAyIBMQMFAQcDAAEBAwIBAwMSARgDRQF8
        A1gB4wNVAbQDBAEGCAADFgEeA1YBtgNSAekDVQHkA1MBqgMLAQ8MAAM/AW4DKwHyAygBPQMrAUIDUAHb
        A0QBeQMQARUgAAM4AV0DVAHNA0QBfAMkATYDVgG4A1MBrwMCAQOkAAMjATMDOQH0AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DSAGHAwEBAgNQAaQDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wNKAYwYAAMNARIDNQFWA1EB6gNXAd8DHwEsCAADBQEHA1YBvANVAecDXAHO
        A0IBdgMyAVADOAFeA1IBowNYAeYDTwHsAyUBNxQAAysBQgNYAeMDWgHNAwkBDAwAA0YBgQMmAfQDHQEp
        AzUBVwNJAeEDOAFcAwkBDCAAAzABTANWAcMDSwGOAyABLwNTAawDVAG5AwcBCqgAAxwBJwMxAU8DMQFP
        AzEBTwMxAU8DKAE8CAADCgENAzABSwMxAU8DMQFPAzEBTwMxAU8DMQFPAzEBTwMxAU8DMQFPAzEBTwMx
        AU8DMQFPAzEBTwMrAUMDBQEHHAADAwEEA1EBoANYAeYDSQGJAwEBAggAAxMBGgNTAbABUQFPAVEB7ANY
        AeMDXQHaA1oB3gNSAekDUAHqAzMBUwsAAQEDHgErAzYBWQMpAT4DSAGFA1UB5wNMAZMDAAEBDAADRAF6
        AykB8wMhATADMgFQA0oB3wM8AWYDCwEPIAADMwFSA1MBxwNIAYgDIgEyA1MBsANUAbUDBQEHqAADKAE9
        A0IBdgNCAXYDQgF2A0IBdgM2AVkDBAEFBAADDQESAz0BaQNCAXYDQgF2A0IBdgNCAXYDQgF2A0IBdgNC
        AXYDQgF2A0IBdgNCAXYDQgF2A0IBdgM6AWIDCgEOGwABAQMmATkDWgHNA1IB6QNMAZEDAgEDDAADBgEI
        AzoBYgNTAawDVwG/A1YBuQNKAYsDFAEcDAADFQEdA1QBqwNYAeIDWQHSA1oB3gNYAeMDHAEnEAADNwFb
        Ay8B8AMzAVIDHwEtA1IB1gNOAZgDFwEgHAADAwEEA0ABcANTAdMDPQFqAykBPwNWAcMDUQGiqAADJAE2
        Aw0B/QMAAf8DAAH/AwAB/wMAAf8DAAH/A1ABpAQAA1YBuAMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/A00BlRgAAwQBBQNQAaMDWAHmA1EBogcAAQEDCwEP
        AwEBAigAAw0BEgNMAZIDWAHmA0kB7wM9AfMDQwHwA1ABnxQAAxkBIwNAAekDTAGRAxABFgNPAaUDSQHh
        Ay8BSgMEAQYYAAMnAToDVAG1A1QBtgMkATUDOAFcA08B2gNDAXeoAANVAbIDQQHwAx0BKQMUARsDFAEb
        AxQBGwNXAb8DVAHkAyABLwMMAfwDVQGyAxUBHQMUARsDFAEbAxQBGwMUARsDFAEbAxQBGwMUARsDFAEb
        AxQBGwMUARsDFgEfA1kB0gNRAekcAANMAZMDWAHmA1IBqAMjATMDOwFjA1MBsAM7AWMDEgEYAwEBAiAA
        Az0BZwFbAVoBWwHhA1cB3wMnAToDEwEaAyABLgMRARcYAANUAbYDSQHhAyABLgMkATUDVAHRA1IB0gMu
        AUcDBAEGEAADIAEuA1IBpgNKAd8DPwFvAx4BKwNRAaADVQHGAyUBN6gAA1oBzQNRAekQAANTAaoDVAHk
        AygBPAMAAf8DTAGTMAADVgHBAwQB/hwAAxYBHwNcAdQDVQHnA1kBwwNbAeEDVQHoA1sB4ANRAaUDMgFR
        AwEBAgQAAwoBDQMTARoDGwEmAywBRAMdASkDAAEBAxgBIgNaAeEDWgHTAxMBGiQAAy4BRwNAAegDUAGe
        AxQBGwMyAVADUQHVAzgB7QNQAZ0DMgFQAyEBMQMrAUIDSAGFA1EB2ANAAegDRQF9AxIBGQM+AWwDSQHh
        A0oBjQMAAQGoAANcAc4DUQHpEAADUwGqA1QB5AMoATwDAAH/A0wBkzAAA1YBwQMAAf8gAAMOARMDWgHb
        A1IB6QNEAfIDVAGrA0QB8gNVAecDVQG3AwIEAwEEA0QBewNWAbkDXAHOA1UB5ANTAawDFAEbAxgBIQNW
        AbsDWAHiAywBRCgAA0wBkwMvAfADRwGCAxEBFwMgAS8DUAGkAzEB7wMAAf8DAAH/AwAB/wMSAfoDVQHA
        AzIBUAMLAQ8DOQFgA0kB3gNUAbMDGQEjrAADUwGwA0EB8AMLAQ8MAANWAbkDVAHkAyYBOAMBAf4DUAGa
        LAADBAEFA1kBzwNRAekkAAMdASoDPQFqAxQBHAQAAyMBMwNaAdwDVQG0AwoBDgMVAR0DWgHVA1IB6QND
        AfADTQHtA1gB5QNVAbEDVgHBA1gB4wNSAekDKQE+KAADBwEKA1IBqQMpAfMDTwGlAx8BLAMDAQQDFQEd
        AzABSwM6AWIDNAFVAx0BKQMFAQcDEwEaA0YBgANAAegDVgG9AycBOrAAAzIBUAMxAfUDTwHsA1cB3wNX
        Ad8DVwHfAwEB/gNTAaoDBAEFA1kBzwMYAfsDVwHfA1cB3wNXAd8DVwHfA1cB3wNXAd8DVwHfA1cB3wNX
        Ad8DVwHfA1cB3wNUAeQDAQH+A1EBoDQAAxQBGwNaAdgDWgHVA04BmQNQAZsDWAHmA1UBtwMcAScDGAEh
        A1oB1QNVAegDVAHrA1YBvgMpAT4wAAMHAQoDSgGLAzkB7AM5AewDUAGeAzEBTwMWAR4DCAELAxABFQMo
        AT0DSAGFA1IB1gMgAfUDUgGpAyABL7gAAzEBTwNYAd4DAAH/AwAB/wMAAf8DRgGBCAADEQEXA1QBqwMj
        AfkDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AzkB9ANNAZUDBgEINAADDwEU
        A1wB2gNKAe4DUgHpA1UB5wFVAVQBVQHnAysBQwgAAyYBOANcAdQDJwE7QAADKAE9A1IBqgMxAe8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMaAfgDVwHEAzcBWwMKAQ3/AFQAAQEDEAEVAyYBOQM3AVoDRAF8A0UBfwML
        AQ8MAAMCAQNMAAMUARwDMQFPA0MBdwNIAYcDRQF+AzgBXQMdASkDBAEG/wD/AP8A/wCYAAFCAU0BPgcA
        AT4DAAEoAwABfAMAAR4DAAEBAQABAQUAAeABARYAA/8BAAX/AeAF/wH4BAAF/wGAAccE/wH4BAAF/wGA
        AQED/wH4ATgEAAHgAgABDwH5AYABAAP/AfABGAQAAeACAAEPAfACAAP/AeABGAQAAecBgwH/Ac8B4AEE
        ARAD/wHAARgEAAHnAYMB/wHPAeABBwEAA/8BgAEYBAAB5wGDAf8BzwHAAR8B4AEfAf8BhwEAATgEAAHg
        AgABDwHhAfABeAEPAfgCAAF4BAAB4AEQAQABDwHgAcABGAEHAfACAAH4BAAB8AEwAQABHwHAAYABDAEH
        AeABeAEBAfgEAAHwATABAAEPAYEBgAEGAQcBwAEAAQMB+AQAAeACAAEPAQEBBwEGAQcBgAEAAQcB+AQA
        AeMBgwH/AY8BAwEPAYYBDwGAATABBwH4BAAB5wGDAf8BzwEHAQ8BhgEfAQAB+AEHAfgEAAHnAYMB/wHP
        AQEBhwGGAQcBAQH8AQcB+AQAAeACAAEPAQEBgAEGAQcBAQH+AQMB+AQAAeACAAEPAcEBgAEPAYcBAQH+
        AQMB+AQAAfABMAEAAQ8B4AHAARgBBwEBAf4BAwH4BAAB8AEQAQABDwHAAeABOAEPAQEB/AEHAfgEAAHg
        ARABAAEPAcIBPwHwAR8BAAH8AQcB+AQAAeACAAEPAeABDwHwAR8BgAF4AQcB+AQAAecBgwH/Ac8B4AEE
        AQAB/wGAAQABBwH4BAAB5wGDAf8BzwHwAgAB/wHAAQABDwH4BAAB4wGDAf8BjwH4AYABAAH/AcABAAEf
        AfgEAAHgAgABDwH/AYABAQH/AeABAAE/AfgEAAHwATABAAEPAf8BgAHHAf8B+AEAAX8B+AQABf8BgAHv
        Af8B/gEBAf8B+AQAC/8B+AQAC/8B+AQACw==
</value>
  </data>
  <metadata name="videofsWatcher.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>158, 17</value>
  </metadata>
</root>