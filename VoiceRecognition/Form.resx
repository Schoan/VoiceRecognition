<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAC8
        GAAAAk1TRnQBSQFMAgEBAwEAAVABAAFQAQABHwEAAR4BAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAF8
        AwABHgMAAQEBAAEgBQABIAE6wQABAQMEAQUDCQEMAwoBDgMAAQH/ANUAAwMBBAMiATEDOAFeA0cBggNQ
        AZoDTgGVAxQBGwgAAwYBCAMUARsDBQEH/wDBAAMRARcDWAHLA1YB5gNUAecDUgHoA1QB5AM2AVgDAAQB
        AQIDNQFXA1YBvANAAXADGAEhAwABAXsAAQEDEwEaAz0BaQNDAXcDHQEqlAADBwEJA1UBsQM0AfQDAAH/
        AwAB/wMAAf8DWgHTAyUBNwMAAQEDPwFtA1YB4wMKAf0DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AxUB+wNaAdsDLQFGJAADAQECAwUBBwgAAxUBHQNZAdcDWgHVA0QBfANFAX8DUgHo
        A1YBuQMzAVMDNQFVA1kBzwNSAegDVwHiA1YBvAM4AV4DCgEOcAADAQECAyMBMwNSAcIDAAH/AwAB/gNH
        Ad0DHwEskAADRgGBAxUB+wNQAZ4DSQGJA0kBiQNJAYkDTwHpA1oB2wMRARcDQQHxA1oB2gNJAYkDSQGJ
        A0kBiQNJAYkDSQGJA0kBiQNJAYkDSQGJA0kBiQNJAYkDSQGJA0wBkQM/AfADWwHIIAADAwEEAy8BSgNI
        AYUDJwE7AxEBFwMwAUsDWAHcA1UBsQMCAQMDCQEMA1oB2wNSAegDWgHgA1wB2gNRAekDUwGsA1gBwANT
        AecDWAHdAywBQ2wAAwEBAgMlATcDUwHFA0EB4wNAAXADMAFLAywB7wNDAXiQAANbAc4DTwHpEAADUwGq
        A1MB5AMoATwDAAH/A0wBkzAAA1YBwQMYAfscAAMBAQIDKgFBA1gB0QNWAeYDWAHdA1MBqgNYAd4DVAHn
        A1UBtwMDAQQEAANCAXUDWwHOA0IB7wNAAfIDUgGoBAADBQEHA1UBsQFYAVYBWAHjAycBOmgAAwEBAgMo
        AT0DVAHIA0QB3gM7AWMDEgEZA00BlQM3AesDNwFakAADWwHOA08B6RAAA1MBqgNTAeQDKAE8AwAB/wNM
        AZMwAANWAcEDGAH7HAADIwEzA1kBzANRAekDWQHJA1EB6wNSAegDUQHrA00BlgMiATIDAAEBDAADBQEH
        AxoBJQMNARIDAAEBAyQBNgNYAd0DWgHYAxIBGGQAAwEBAgMrAUIDUwHKA0oB2gM5AV8DFQEdA04BmAMm
        AfIDTwGaAwQBBZAAA1kByQNPAekQAANTAaoDUwHkAygBPAMAAf8DTAGTMAADVgHBAy4B9xgAAwIBAwNO
        AZgDVgHmA1QBqwMEAQYDKwFDA1QBrwMsAUQDAAEBIwABAQM4AV0DVQHmA1oB2wM2AVgDJgE4AzEBTwMf
        AS04AAMEAQYDCQEMAwYBCAMBAQIMAAMCAQMDLwFJA1EBzANNAdYDNwFbAxgBIQNPAZwDKQHwA00BlgME
        AQaUAANMAZIDAQH+A0QBegMyAVADMgFQAzIBUANPAekDUwHkAw4BEwMtAfYDQgHvAzUBVgMyAVADMgFQ
        AzIBUAMyAVADMgFQAzIBUAMyAVADMgFQAzIBUAMyAVADOAFeAzQB9ANaAdMcAANUAasDVgHmA1IBqAMU
        ARwXAAEBAwgBCwMRARcDDQESAwMBBBAAA0UBfwNRAekDWAHeA1oB4ANWAeYDUAGkAwYBCCQAAwEBAgMm
        ATkDSgGNA1AB0QMlAfMDBQH9AxQB+QNEAd4DUAGkAzIBUAMOARMDMQFOA1IBzwNOAdIDNQFXAxoBJQNR
        AaADLgHuA0sBkAMEAQWYAAMNARIDVgG+AwAB/wMAAf8DAAH/AwAB/wNPAegDKgFABAADOQFgAyQB+AMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMvAfUDMQFOHAADFwEg
        A1sB2gNUAeQDTAGRAwMBBAsAAQEDGwEmA0MBdwNUAa4DVwHCA1YBvANOAZUDLgFIAwgBCwgAAwcBCgNS
        AagDRgHvA08B6QNTAecDWAHeAycBOwMAAQEcAAMdASoDUgGsAyYB8gMaAfcDVAHIA08BmgNIAYcDTAGR
        A1MBugM2AeoDBQH8Az4B5gM+AeQDUgHOAzMBUgMdASkDUAGkAzcB6wNKAYsDBAEFoAADBQEHAxcBIAMX
        ASADFwEgAxcBIAMLAQ8LAAEBAxIBGQMXASADFwEgAxcBIAMXASADFwEgAxcBIAMXASADFwEgAxcBIAMX
        ASADFwEgAxcBIAMNAREcAAMBAQIDCQEMA04BlgNUAecDSAGIAwABAQcAAQEDJAE1A1UBsgNUAecDUQHr
        AVUBUwFVAeYDTQHqA1AB6gNaAdgDQAFuAwcBCggAAwoBDQMkATYDBAEGA0MBdwNUAecDTAGTAwMBBBgA
        AzABSwNJAdkDLAHvA0sBjgMcAScDAgEDEAADEgEYAz8BbgNNAdUDUwHKAzEBTgMfAS0DUQGpAzkB6ANI
        AYUDBAEFpAADQgF0A0IB7wNCAe8DQgHvA0IB7wNVAbQIAAMcAScDWAHZA0IB7wNCAe8DQgHvA0IB7wNC
        Ae8DQgHvA0IB7wNCAe8DQgHvA0IB7wNCAe8DQgHvA1oBygMPARQUAAMWAR8DNwFbA0YBfwFaAVgBWgHh
        A1UB5gMRARcIAAMNAREDVQG3A1IB6ANWAeUDKwFCAwABAQMNARIDTwGbA08B7ANaAeEDMQFOAwABAQsA
        AQEDEgEZAz0BaANYAeMDWAHLAwwBEBQAAysBQgNDAd8DTQHWAywBRAMHAQkDJgE5A0sBjwNQAc0DPgHk
        A0wB1wNPAaUDMQFPAwsBDwMSARkDFwEgAyIBMgNSAawDPgHmA0UBfwMEAQWkAAM8AWgDFgH7A1oBzQNV
        AbQDVQG0A1UBtAMdAfoDWAHAAwgBCwNaAdsDJQH4A1YBuANVAbQDVQG0A1UBtANVAbQDVQG0A1UBtANV
        AbQDVQG0A1UBtANVAbQDVgG8AwsB/ANVAbQQAAMBAQIDRwGAA1gB3QNWAeYDUQHrA1QBrwMAAQEHAAEB
        AzABSwNYAeEDVwG9Aw0BEQwAAwMBBAM7AWMBVgFVAVYB5gNWAbMDBwEKCAADGwEmA1UBtQNXAd8DTwHs
        A1UBsQMJAQwQAAMQARUDUAHQA0gB3AMmATkDEAEVA0wBkQMzAewDIAH0A1MBygNSAa4DVAG/AzoB6QMU
        AfkDUwGtAyQBNQMRARcDSAGEAy4B7gNLAZADBAEFqAADVQG6A00B7AMDAQQMAANUAa8DUwHkAygBPAMA
        Af8DTgGYLwABAQNZAccDRgHuEAADAgEDA1EBpwNUAecDUgGoA0IBdAMhATEIAAMBAQIDTgGUA1QB5wM6
        AWEUAAMEAQUDVwHCA1oB0wMUARsIAAMfASwDVAHnAVgBVgFYAeMDPQFqAwEBAhQAA0gBhAMsAe8DNQFX
        Aw8BFANQAaQDLAHvA1ABnwMfAS0DAgEDCAADEwEaA0UBfwNBAeMDUwG3AyYBOAMtAUUDUgHLA1MBsgMQ
        ARWoAANbAc4DTwHpEAADUwGqA1MB5AMoATwDAAH/A0wBkzAAA1YBwQMYAfsQAAMCAQMDUwGwA1QB5wMk
        ATYDAAEBDAADAgEDA1YBswNUAecDJgE5FAADAQECA1MBrANaAdsDFwEgCAADFgEeAVcBVgFXAeUDWAHR
        AwcBCRQAAwcBCgNLAdsDUwG6AxUBHQNBAXIDPgHlA0gBhAMTARoUAAMEAQYDPAFnA0cB3QNPAZoDGQEj
        A0MBeANNAdYDNwFbqAADWwHOA08B6RAAA1MBqgNTAeQDKAE8AwAB/wNMAZMwAANWAcEDGAH7EwABAQNS
        AaYDVgHmA1QBqwNIAYUDLQFGAwABAQgAA0wBkQNUAecDPgFqAwABARAAAw8BFANXAcUDWgHTAxABFggA
        Ax8BLANUAecDWgHgA0UBfAMbASYDAQECDAADKwFDAzEB7QM+AWwDEwEaA1QByANTAcADIAEuHAADEQEX
        A0oBjANRAcwDMwFSAy8BSgNQAdADSwGQqAADUQGhAzkB8wMqAUADIQEwAyEBMAMhATADWQHJA1YB4wMh
        ATEDDAH8A1YBuQMiATIDIQEwAyEBMAMhATADIQEwAyEBMAMhATADIQEwAyEBMAMhATADIQEwAyQBNQNa
        AdoDWAHdEwABAQNEAXoDUQHpA1EB6wNUAecDVAGvAwcBCQgAAyYBOQNUAeQDWAHAAyIBMQMFAQcDAAEB
        AwIBAwMSARgDRQF8A1gB4wNVAbQDBAEGCAADFgEeA1YBtgNRAekDVAHkA1MBqgMLAQ8MAAM/AW4DJgHy
        AygBPQMrAUIDSwHbA0QBeQMQARUgAAM4AV0DUAHNA0QBfAMkATYDVAG4A1IBrwMCAQOkAAMjATMDNQH0
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DSAGHAwEBAgNQAaQDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wNKAYwYAAMNARIDNQFWA1AB6gNXAd8DHwEsCAADBQEH
        A1YBvANUAecDXAHOA0IBdgMyAVADOAFeA1IBowNWAeYDTQHsAyUBNxQAAysBQgNYAeMDWgHNAwkBDAwA
        A0YBgQMgAfQDHQEpAzUBVwNEAeEDOAFcAwkBDCAAAzABTANTAcMDSwGOAyABLwNSAawDUwG5AwcBCqgA
        AxwBJwMxAU8DMQFPAzEBTwMxAU8DKAE8CAADCgENAzABSwMxAU8DMQFPAzEBTwMxAU8DMQFPAzEBTwMx
        AU8DMQFPAzEBTwMxAU8DMQFPAzEBTwMrAUMDBQEHHAADAwEEA1EBoANWAeYDSQGJAwEBAggAAxMBGgNT
        AbABTwFNAU8B7ANYAeMDXAHaA1gB3gNRAekDTQHqAzMBUwsAAQEDHgErAzYBWQMpAT4DSAGFA1QB5wNM
        AZMDAAEBDAADRAF6AyUB8wMhATADMgFQA0MB3wM8AWYDCwEPIAADMwFSA1EBxwNIAYgDIgEyA1IBsANT
        AbUDBQEHqAADKAE9A0IBdgNCAXYDQgF2A0IBdgM2AVkDBAEFBAADDQESAz0BaQNCAXYDQgF2A0IBdgNC
        AXYDQgF2A0IBdgNCAXYDQgF2A0IBdgNCAXYDQgF2A0IBdgM6AWIDCgEOGwABAQMmATkDWgHNA1EB6QNM
        AZEDAgEDDAADBgEIAzoBYgNTAawDVwG/A1YBuQNKAYsDFAEcDAADFQEdA1QBqwNXAeIDWQHSA1gB3gNW
        AeMDHAEnEAADNwFbAykB8AMzAVIDHwEtA00B1gNOAZgDFwEgHAADAwEEA0ABcANOAdMDPQFqAykBPwNT
        AcMDUAGiqAADJAE2AwwB/QMAAf8DAAH/AwAB/wMAAf8DAAH/A1ABpAQAA1YBuAMAAf8DAAH/AwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/A00BlRgAAwQBBQNQAaMDVgHm
        A1EBogcAAQEDCwEPAwEBAigAAw0BEgNMAZIDVgHmA0YB7wM7AfMDQQHwA1ABnxQAAxkBIwM6AekDTAGR
        AxABFgNPAaUDRAHhAy8BSgMEAQYYAAMnAToDUwG1A1IBtgMkATUDOAFcA0oB2gNDAXeoAANVAbIDPwHw
        Ax0BKQMUARsDFAEbAxQBGwNXAb8DUwHkAyABLwMLAfwDVQGyAxUBHQMUARsDFAEbAxQBGwMUARsDFAEb
        AxQBGwMUARsDFAEbAxQBGwMUARsDFgEfA1kB0gNPAekcAANMAZMDVgHmA1IBqAMjATMDOwFjA1MBsAM7
        AWMDEgEYAwEBAiAAAz0BZwFaAVgBWgHhA1cB3wMnAToDEwEaAyABLgMRARcYAANSAbYDRAHhAyABLgMk
        ATUDUAHRA04B0gMuAUcDBAEGEAADIAEuA1EBpgNDAd8DPwFvAx4BKwNRAaADUwHGAyUBN6gAA1oBzQNP
        AekQAANTAaoDUwHkAygBPAMAAf8DTAGTMAADVgHBAwQB/hwAAxYBHwNcAdQDVAHnA1kBwwNaAeEDUgHo
        A1oB4ANRAaUDMgFRAwEBAgQAAwoBDQMTARoDGwEmAywBRAMdASkDAAEBAxgBIgNYAeEDWgHTAxMBGiQA
        Ay4BRwM5AegDTwGeAxQBGwMyAVADTQHVAzEB7QNPAZ0DMgFQAyEBMQMrAUIDSAGFA0sB2AM5AegDRQF9
        AxIBGQM+AWwDRAHhA0oBjQMAAQGoAANbAc4DTwHpEAADUwGqA1MB5AMoATwDAAH/A0wBkzAAA1YBwQMA
        Af8gAAMOARMDWgHbA1EB6QNAAfIDVAGrA0AB8gNUAecDVQG3AwIEAwEEA0QBewNWAbkDXAHOA1QB5ANT
        AawDFAEbAxgBIQNWAbsDVwHiAywBRCgAA0wBkwMpAfADRwGCAxEBFwMgAS8DUAGkAywB7wMAAf8DAAH/
        AwAB/wMPAfoDUwHAAzIBUAMLAQ8DOQFgA0QB3gNTAbMDGQEjrAADUwGwAz8B8AMLAQ8MAANWAbkDUwHk
        AyYBOAMBAf4DUAGaLAADBAEFA1kBzwNPAekkAAMdASoDPQFqAxQBHAQAAyMBMwNYAdwDVQG0AwoBDgMV
        AR0DWgHVA1EB6QNBAfADSgHtA1cB5QNVAbEDVgHBA1gB4wNRAekDKQE+KAADBwEKA1EBqQMlAfMDTwGl
        Ax8BLAMDAQQDFQEdAzABSwM6AWIDNAFVAx0BKQMFAQcDEwEaA0YBgAM5AegDVAG9AycBOrAAAzIBUAMv
        AfUDTQHsA1YB3wNWAd8DVgHfAwEB/gNTAaoDBAEFA1kBzwMWAfsDVgHfA1YB3wNWAd8DVgHfA1YB3wNW
        Ad8DVgHfA1YB3wNWAd8DVgHfA1YB3wNTAeQDAQH+A1EBoDQAAxQBGwNaAdgDWgHVA04BmQNQAZsDVgHm
        A1UBtwMcAScDGAEhA1oB1QNSAegDUQHrA1YBvgMpAT4wAAMHAQoDSgGLAzMB7AMzAewDTwGeAzEBTwMW
        AR4DCAELAxABFQMoAT0DSAGFA00B1gMbAfUDUQGpAyABL7gAAzEBTwNWAd4DAAH/AwAB/wMAAf8DRgGB
        CAADEQEXA1QBqwMhAfkDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AzUB9ANN
        AZUDBgEINAADDwEUA1sB2gNIAe4DUQHpA1QB5wFUAVMBVAHnAysBQwgAAyYBOANbAdQDJwE7QAADKAE9
        A1EBqgMsAe8DAAH/AwAB/wMAAf8DAAH/AwAB/wMXAfgDVAHEAzcBWwMKAQ3/AFQAAQEDEAEVAyYBOQM3
        AVoDRAF8A0UBfwMLAQ8MAAMCAQNMAAMUARwDMQFPA0MBdwNIAYcDRQF+AzgBXQMdASkDBAEG/wD/AP8A
        /wCYAAFCAU0BPgcAAT4DAAEoAwABfAMAAR4DAAEBAQABAQUAAeABARYAA/8BAAX/AeAF/wH4BAAF/wGA
        AccE/wH4BAAF/wGAAQED/wH4ATgEAAHgAgABDwH5AYABAAP/AfABGAQAAeACAAEPAfACAAP/AeABGAQA
        AecBgwH/Ac8B4AEEARAD/wHAARgEAAHnAYMB/wHPAeABBwEAA/8BgAEYBAAB5wGDAf8BzwHAAR8B4AEf
        Af8BhwEAATgEAAHgAgABDwHhAfABeAEPAfgCAAF4BAAB4AEQAQABDwHgAcABGAEHAfACAAH4BAAB8AEw
        AQABHwHAAYABDAEHAeABeAEBAfgEAAHwATABAAEPAYEBgAEGAQcBwAEAAQMB+AQAAeACAAEPAQEBBwEG
        AQcBgAEAAQcB+AQAAeMBgwH/AY8BAwEPAYYBDwGAATABBwH4BAAB5wGDAf8BzwEHAQ8BhgEfAQAB+AEH
        AfgEAAHnAYMB/wHPAQEBhwGGAQcBAQH8AQcB+AQAAeACAAEPAQEBgAEGAQcBAQH+AQMB+AQAAeACAAEP
        AcEBgAEPAYcBAQH+AQMB+AQAAfABMAEAAQ8B4AHAARgBBwEBAf4BAwH4BAAB8AEQAQABDwHAAeABOAEP
        AQEB/AEHAfgEAAHgARABAAEPAcIBPwHwAR8BAAH8AQcB+AQAAeACAAEPAeABDwHwAR8BgAF4AQcB+AQA
        AecBgwH/Ac8B4AEEAQAB/wGAAQABBwH4BAAB5wGDAf8BzwHwAgAB/wHAAQABDwH4BAAB4wGDAf8BjwH4
        AYABAAH/AcABAAEfAfgEAAHgAgABDwH/AYABAQH/AeABAAE/AfgEAAHwATABAAEPAf8BgAHHAf8B+AEA
        AX8B+AQABf8BgAHvAf8B/gEBAf8B+AQAC/8B+AQAC/8B+AQACw==
</value>
  </data>
  <metadata name="videofsWatcher.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>158, 17</value>
  </metadata>
</root>