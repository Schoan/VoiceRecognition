<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADA
        GAAAAk1TRnQBSQFMAgEBAwEAAUgBAAFIAQABHwEAAR4BAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAF8
        AwABHgMAAQEBAAEgBQABIAE6wQABAQMEAQUDCQEMAwoBDgMAAQH/ANUAAwMBBAMiATEDOAFeA0cBggNQ
        AZoDTgGVAxQBGwgAAwYBCAMUARsDBQEH/wDBAAMRARcDWAHLA1MB5gNTAecDTwHoA1MB5AM2AVgDAAQB
        AQIDNQFXA1YBvANAAXADGAEhAwABAXsAAQEDEwEaAz0BaQNDAXcDHQEqlAADBwEJA1UBsQMwAfQDAAH/
        AwAB/wMAAf8DWQHTAyUBNwMAAQEDPwFtA1MB4wMJAf0DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AxMB+wNYAdsDLQFGJAADAQECAwUBBwgAAxUBHQNZAdcDWgHVA0QBfANFAX8DTwHo
        A1YBuQMzAVMDNQFVA1kBzwNPAegDVgHiA1YBvAM4AV4DCgEOcAADAQECAyMBMwNNAcIDAAH/AwAB/gNB
        Ad0DHwEskAADRgGBAxMB+wNQAZ4DSQGJA0kBiQNJAYkDTAHpA1gB2wMRARcDPQHxA1kB2gNJAYkDSQGJ
        A0kBiQNJAYkDSQGJA0kBiQNJAYkDSQGJA0kBiQNJAYkDSQGJA0wBkQM9AfADWgHIIAADAwEEAy8BSgNI
        AYUDJwE7AxEBFwMwAUsDVwHcA1UBsQMCAQMDCQEMA1kB2wNPAegDWQHgA1sB2gNPAekDUwGsA1gBwANR
        AecDWAHdAywBQ2wAAwEBAgMlATcDTwHFAzkB4wNAAXADMAFLAyUB7wNDAXiQAANaAc4DTAHpEAADUwGq
        A1AB5AMoATwDAAH/A0wBkzAAA1YBwQMWAfscAAMBAQIDKgFBA1gB0QNTAeYDWAHdA1MBqgNWAd4DUwHn
        A1UBtwMDAQQEAANCAXUDWgHOAz8B7wM8AfIDUgGoBAADBQEHA1UBsQFWAVMBVgHjAycBOmgAAwEBAgMo
        AT0DTwHIAz0B3gM7AWMDEgEZA00BlQMwAesDNwFakAADWgHOA0wB6RAAA1MBqgNQAeQDKAE8AwAB/wNM
        AZMwAANWAcEDFgH7HAADIwEzA1kBzANPAekDWQHJA04B6wNPAegDTgHrA00BlgMiATIDAAEBDAADBQEH
        AxoBJQMNARIDAAEBAyQBNgNYAd0DWgHYAxIBGGQAAwEBAgMrAUIDTgHKA0QB2gM5AV8DFQEdA00BmAMh
        AfIDTgGaAwQBBZAAA1kByQNMAekQAANTAaoDUAHkAygBPAMAAf8DTAGTMAADVgHBAyoB9xgAAwIBAwNO
        AZgDUwHmA1QBqwMEAQYDKwFDA1QBrwMsAUQDAAEBIwABAQM4AV0DUgHmA1oB2wM2AVgDJgE4AzEBTwMf
        AS04AAMEAQYDCQEMAwYBCAMBAQIMAAMCAQMDLwFJA0sBzANGAdYDNwFbAxgBIQNOAZwDIgHwA0wBlgME
        AQaUAANMAZIDAQH+A0QBegMyAVADMgFQAzIBUANMAekDUAHkAw4BEwMpAfYDPwHvAzUBVgMyAVADMgFQ
        AzIBUAMyAVADMgFQAzIBUAMyAVADMgFQAzIBUAMyAVADOAFeAzAB9ANZAdMcAANUAasDUwHmA1IBqAMU
        ARwXAAEBAwgBCwMRARcDDQESAwMBBBAAA0UBfwNPAekDVgHeA1kB4ANTAeYDUAGkAwYBCCQAAwEBAgMm
        ATkDSgGNA0kB0QMfAfMDBAH9AxAB+QM9Ad4DTgGkAzIBUAMOARMDMQFOA0wBzwNJAdIDNQFXAxoBJQNP
        AaADKAHuA0sBkAMEAQWYAAMNARIDVgG+AwAB/wMAAf8DAAH/AwAB/wNNAegDKgFABAADOQFgAyIB+AMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMtAfUDMQFOHAADFwEg
        A1oB2gNTAeQDTAGRAwMBBAsAAQEDGwEmA0MBdwNUAa4DVwHCA1YBvANOAZUDLgFIAwgBCwgAAwcBCgNS
        AagDQgHvA0wB6QNRAecDVgHeAycBOwMAAQEcAAMdASoDUAGsAyEB8gMWAfcDTwHIA04BmgNIAYcDSwGR
        A1ABugMwAeoDBAH8AzYB5gM3AeQDSwHOAzMBUgMdASkDTgGkAzAB6wNJAYsDBAEFoAADBQEHAxcBIAMX
        ASADFwEgAxcBIAMLAQ8LAAEBAxIBGQMXASADFwEgAxcBIAMXASADFwEgAxcBIAMXASADFwEgAxcBIAMX
        ASADFwEgAxcBIAMNAREcAAMBAQIDCQEMA04BlgNTAecDSAGIAwABAQcAAQEDJAE1A1UBsgNTAecDTgHr
        AVIBUQFSAeYDSgHqA00B6gNaAdgDQAFuAwcBCggAAwoBDQMkATYDBAEGA0MBdwNTAecDTAGTAwMBBBgA
        AzABSwNDAdkDJQHvA0sBjgMcAScDAgEDEAADEgEYAz8BbgNHAdUDTgHKAzEBTgMfAS0DTwGpAzAB6ANI
        AYUDBAEFpAADQgF0Az8B7wM/Ae8DPwHvAz8B7wNVAbQIAAMcAScDVwHZAz8B7wM/Ae8DPwHvAz8B7wM/
        Ae8DPwHvAz8B7wM/Ae8DPwHvAz8B7wM/Ae8DPwHvA1oBygMPARQUAAMWAR8DNwFbA0YBfwFYAVYBWAHh
        A1IB5gMRARcIAAMNAREDVQG3A08B6ANUAeUDKwFCAwABAQMNARIDTwGbA00B7ANYAeEDMQFOAwABAQsA
        AQEDEgEZAz0BaANWAeMDWAHLAwwBEBQAAysBQgM8Ad8DRgHWAywBRAMHAQkDJgE5A0sBjwNMAc0DNwHk
        A0YB1wNPAaUDMQFPAwsBDwMSARkDFwEgAyIBMgNQAawDNgHmA0UBfwMEAQWkAAM8AWgDFAH7A1kBzQNV
        AbQDVQG0A1UBtAMcAfoDWAHAAwgBCwNYAdsDIwH4A1YBuANVAbQDVQG0A1UBtANVAbQDVQG0A1UBtANV
        AbQDVQG0A1UBtANVAbQDVgG8AwoB/ANVAbQQAAMBAQIDRwGAA1gB3QNTAeYDTgHrA1QBrwMAAQEHAAEB
        AzABSwNWAeEDVwG9Aw0BEQwAAwMBBAM7AWMBUwFSAVMB5gNWAbMDBwEKCAADGwEmA1UBtQNWAd8DTQHs
        A1UBsQMJAQwQAAMQARUDSQHQA0EB3AMmATkDEAEVA0sBkQMrAewDGgH0A04BygNPAa4DUAG/AzIB6QMQ
        AfkDUQGtAyQBNQMRARcDSAGEAygB7gNLAZADBAEFqAADVQG6A0kB7AMDAQQMAANUAa8DUAHkAygBPAMA
        Af8DTgGYLwABAQNYAccDQgHuEAADAgEDA1EBpwNTAecDUgGoA0IBdAMhATEIAAMBAQIDTgGUA1MB5wM6
        AWEUAAMEAQUDVwHCA1oB0wMUARsIAAMfASwDUwHnAVYBUwFWAeMDPQFqAwEBAhQAA0gBhAMlAe8DNQFX
        Aw8BFANOAaQDJQHvA04BnwMfAS0DAgEDCAADEwEaA0UBfwM5AeMDUAG3AyYBOAMtAUUDTAHLA1ABsgMQ
        ARWoAANaAc4DTAHpEAADUwGqA1AB5AMoATwDAAH/A0wBkzAAA1YBwQMWAfsQAAMCAQMDUwGwA1MB5wMk
        ATYDAAEBDAADAgEDA1YBswNTAecDJgE5FAADAQECA1MBrANaAdsDFwEgCAADFgEeAVYBVAFWAeUDWAHR
        AwcBCRQAAwcBCgNDAdsDUAG6AxUBHQNBAXIDNwHlA0gBhAMTARoUAAMEAQYDPAFnA0EB3QNOAZoDGQEj
        A0MBeANGAdYDNwFbqAADWgHOA0wB6RAAA1MBqgNQAeQDKAE8AwAB/wNMAZMwAANWAcEDFgH7EwABAQNS
        AaYDUwHmA1QBqwNIAYUDLQFGAwABAQgAA0wBkQNTAecDPgFqAwABARAAAw8BFANXAcUDWgHTAxABFggA
        Ax8BLANTAecDWQHgA0UBfAMbASYDAQECDAADKwFDAyoB7QM+AWwDEwEaA08ByANOAcADIAEuHAADEQEX
        A0oBjANLAcwDMwFSAy8BSgNJAdADSwGQqAADUQGhAzcB8wMqAUADIQEwAyEBMAMhATADWQHJA1MB4wMh
        ATEDCwH8A1YBuQMiATIDIQEwAyEBMAMhATADIQEwAyEBMAMhATADIQEwAyEBMAMhATADIQEwAyQBNQNZ
        AdoDVwHdEwABAQNEAXoDTwHpA04B6wNTAecDVAGvAwcBCQgAAyYBOQNTAeQDWAHAAyIBMQMFAQcDAAEB
        AwIBAwMSARgDRQF8A1YB4wNVAbQDBAEGCAADFgEeA1YBtgNPAekDUwHkA1MBqgMLAQ8MAAM/AW4DIQHy
        AygBPQMrAUIDQwHbA0QBeQMQARUgAAM4AV0DTAHNA0QBfAMkATYDUAG4A08BrwMCAQOkAAMjATMDMQH0
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DSAGHAwEBAgNQAaQDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wNKAYwYAAMNARIDNQFWA00B6gNWAd8DHwEsCAADBQEH
        A1YBvANTAecDXAHOA0IBdgMyAVADOAFeA1IBowNTAeYDSgHsAyUBNxQAAysBQgNWAeMBWgFZAVoBzQMJ
        AQwMAANGAYEDGgH0Ax0BKQM1AVcDPAHhAzgBXAMJAQwgAAMwAUwDTwHDA0sBjgMgAS8DUAGsA1ABuQMH
        AQqoAAMcAScDMQFPAzEBTwMxAU8DMQFPAygBPAgAAwoBDQMwAUsDMQFPAzEBTwMxAU8DMQFPAzEBTwMx
        AU8DMQFPAzEBTwMxAU8DMQFPAzEBTwMxAU8DKwFDAwUBBxwAAwMBBANRAaADUwHmA0kBiQMBAQIIAAMT
        ARoDUwGwAU0BSgFNAewDVgHjA1sB2gNWAd4DTwHpA0oB6gMzAVMLAAEBAx4BKwM2AVkDKQE+A0gBhQNT
        AecDTAGTAwABAQwAA0QBegMfAfMDIQEwAzIBUAM8Ad8DPAFmAwsBDyAAAzMBUgNNAccDSAGIAyIBMgNQ
        AbADUAG1AwUBB6gAAygBPQNCAXYDQgF2A0IBdgNCAXYDNgFZAwQBBQQAAw0BEgM9AWkDQgF2A0IBdgNC
        AXYDQgF2A0IBdgNCAXYDQgF2A0IBdgNCAXYDQgF2A0IBdgNCAXYDOgFiAwoBDhsAAQEDJgE5A1oBzQNP
        AekDTAGRAwIBAwwAAwYBCAM6AWIDUwGsA1cBvwNWAbkDSgGLAxQBHAwAAxUBHQNUAasDVgHiA1kB0gNW
        Ad4DUwHjAxwBJxAAAzcBWwMiAfADMwFSAx8BLQNGAdYDTQGYAxcBIBwAAwMBBANAAXADRwHTAz0BagMp
        AT8DTwHDA08BoqgAAyQBNgMLAf0DAAH/AwAB/wMAAf8DAAH/AwAB/wNQAaQEAANWAbgDAAH/AwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wNNAZUYAAMEAQUDUAGj
        A1MB5gNRAaIHAAEBAwsBDwMBAQIoAAMNARIDTAGSA1MB5gNCAe8DOQHzAz8B8ANQAZ8UAAMZASMDMgHp
        A0sBkQMQARYDTwGlAzwB4QMvAUoDBAEGGAADJwE6A1ABtQNQAbYDJAE1AzgBXANEAdoDQwF3qAADVQGy
        Az0B8AMdASkDFAEbAxQBGwMUARsDVwG/A1AB5AMgAS8DCgH8A1UBsgMVAR0DFAEbAxQBGwMUARsDFAEb
        AxQBGwMUARsDFAEbAxQBGwMUARsDFAEbAxYBHwNZAdIDTAHpHAADTAGTA1MB5gNSAagDIwEzAzsBYwNT
        AbADOwFjAxIBGAMBAQIgAAM9AWcBWAFWAVgB4QNWAd8DJwE6AxMBGgMgAS4DEQEXGAADUAG2AzwB4QMg
        AS4DJAE1A0kB0QNJAdIDLgFHAwQBBhAAAyABLgNPAaYDPAHfAz8BbwMeASsDTwGgA04BxgMlATeoAANZ
        Ac0DTAHpEAADUwGqA1AB5AMoATwDAAH/A0wBkzAAA1YBwQMEAf4cAAMWAR8DWwHUA1MB5wNZAcMDWAHh
        A08B6ANZAeADUQGlAzIBUQMBAQIEAAMKAQ0DEwEaAxsBJgMsAUQDHQEpAwABAQMYASIDVgHhA1oB0wMT
        ARokAAMuAUcDMAHoA00BngMUARsDMgFQA0cB1QMqAe0DTQGdAzIBUAMhATEDKwFCA0gBhQNFAdgDMAHo
        A0UBfQMSARkDPgFsAzwB4QNKAY0DAAEBqAADWgHOA0wB6RAAA1MBqgNQAeQDKAE8AwAB/wNMAZMwAANW
        AcEDAAH/IAADDgETA1kB2wNPAekDPAHyA1QBqwM8AfIDUwHnA1UBtwMCBAMBBANEAXsDVgG5A1wBzgNT
        AeQDUwGsAxQBGwMYASEDVgG7A1YB4gMsAUQoAANMAZMDIgHwA0cBggMRARcDIAEvA04BpAMlAe8DAAH/
        AwAB/wMAAf8DDAH6A04BwAMyAVADCwEPAzkBYAM9Ad4DUQGzAxkBI6wAA1MBsAM9AfADCwEPDAADVgG5
        A1AB5AMmATgDAQH+A1ABmiwAAwQBBQNZAc8DTAHpJAADHQEqAz0BagMUARwEAAMjATMDVwHcA1UBtAMK
        AQ4DFQEdA1oB1QNPAekDPwHwA0cB7QNWAeUDVQGxA1YBwQNWAeMDTwHpAykBPigAAwcBCgNPAakDHwHz
        A08BpQMfASwDAwEEAxUBHQMwAUsDOgFiAzQBVQMdASkDBQEHAxMBGgNGAYADMAHoA1EBvQMnATqwAAMy
        AVADLQH1A0oB7ANUAd8DVAHfA1QB3wMBAf4DUwGqAwQBBQNZAc8DFAH7A1QB3wNUAd8DVAHfA1QB3wNU
        Ad8DVAHfA1QB3wNUAd8DVAHfA1QB3wNUAd8DUAHkAwEB/gNRAaA0AAMUARsDWgHYA1oB1QNOAZkDUAGb
        A1MB5gNVAbcDHAEnAxgBIQNaAdUDTwHoA04B6wNWAb4DKQE+MAADBwEKA0kBiwMrAewDKwHsA00BngMx
        AU8DFgEeAwgBCwMQARUDKAE9A0gBhQNGAdYDFwH1A08BqQMgAS+4AAMxAU8DVQHeAwAB/wMAAf8DAAH/
        A0YBgQgAAxEBFwNUAasDHwH5AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMx
        AfQDTQGVAwYBCDQAAw8BFANaAdoDRgHuA08B6QNTAecBUwFRAVMB5wMrAUMIAAMmATgDWQHUAycBO0AA
        AygBPQNQAaoDJQHvAwAB/wMAAf8DAAH/AwAB/wMAAf8DFAH4A08BxAM3AVsDCgEN/wBUAAEBAxABFQMm
        ATkDNwFaA0QBfANFAX8DCwEPDAADAgEDTAADFAEcAzEBTwNDAXcDSAGHA0UBfgM4AV0DHQEpAwQBBv8A
        /wD/AP8AmAABQgFNAT4HAAE+AwABKAMAAXwDAAEeAwABAQEAAQEFAAHgAQEWAAP/AQAF/wHgBf8B+AQA
        Bf8BgAHHBP8B+AQABf8BgAEBA/8B+AE4BAAB4AIAAQ8B+QGAAQAD/wHwARgEAAHgAgABDwHwAgAD/wHg
        ARgEAAHnAYMB/wHPAeABBAEQA/8BwAEYBAAB5wGDAf8BzwHgAQcBAAP/AYABGAQAAecBgwH/Ac8BwAEf
        AeABHwH/AYcBAAE4BAAB4AIAAQ8B4QHwAXgBDwH4AgABeAQAAeABEAEAAQ8B4AHAARgBBwHwAgAB+AQA
        AfABMAEAAR8BwAGAAQwBBwHgAXgBAQH4BAAB8AEwAQABDwGBAYABBgEHAcABAAEDAfgEAAHgAgABDwEB
        AQcBBgEHAYABAAEHAfgEAAHjAYMB/wGPAQMBDwGGAQ8BgAEwAQcB+AQAAecBgwH/Ac8BBwEPAYYBHwEA
        AfgBBwH4BAAB5wGDAf8BzwEBAYcBhgEHAQEB/AEHAfgEAAHgAgABDwEBAYABBgEHAQEB/gEDAfgEAAHg
        AgABDwHBAYABDwGHAQEB/gEDAfgEAAHwATABAAEPAeABwAEYAQcBAQH+AQMB+AQAAfABEAEAAQ8BwAHg
        ATgBDwEBAfwBBwH4BAAB4AEQAQABDwHCAT8B8AEfAQAB/AEHAfgEAAHgAgABDwHgAQ8B8AEfAYABeAEH
        AfgEAAHnAYMB/wHPAeABBAEAAf8BgAEAAQcB+AQAAecBgwH/Ac8B8AIAAf8BwAEAAQ8B+AQAAeMBgwH/
        AY8B+AGAAQAB/wHAAQABHwH4BAAB4AIAAQ8B/wGAAQEB/wHgAQABPwH4BAAB8AEwAQABDwH/AYABxwH/
        AfgBAAF/AfgEAAX/AYAB7wH/Af4BAQH/AfgEAAv/AfgEAAv/AfgEAAs=
</value>
  </data>
</root>